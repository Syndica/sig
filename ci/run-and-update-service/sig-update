#!/usr/bin/env bash

# check if there is an update. if so rebuild sig. otherwise exit
sudo -iu sig bash <<'EOF' | tee /dev/null
    set -euxo pipefail
    . /etc/sig.conf
    cd /home/sig/sig
    git fetch

    if [[ $(git rev-parse HEAD) == $(git rev-parse remotes/origin/$BRANCH) ]] && \
        [ -f /home/sig/sig/zig-out/bin/sig ]; then
        echo sig is unchanged, skipping update
        exit 58
    fi

    git checkout remotes/origin/$BRANCH
    echo building sig
    zig build -Doptimize=ReleaseSafe -Dno-run sig

    echo > /home/sig/sig/metrics/.env
    ip="$(curl -fsS https://checkip.amazonaws.com || echo fail)"
    if [[ $ip =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]] \
            && IFS=. read -r a b c d <<<"$ip" \
            && ((a<=255 && b<=255 && c<=255 && d<=255)); then
        echo "GF_SERVER_ROOT_URL=http://$ip/" >> /home/sig/sig/metrics/.env
    fi
    if ! [ -z "$SLACK_WEBHOOK_URL" ]; then
        echo "SLACK_WEBHOOK_URL=$SLACK_WEBHOOK_URL" >> /home/sig/sig/metrics/.env
    fi
    if ! [ -z "$GF_SECURITY_ADMIN_PASSWORD" ]; then
        echo "GF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD" >> /home/sig/sig/metrics/.env
    fi
EOF
code=${PIPESTATUS[0]}

set -euxo pipefail

if [[ $code == 58 ]]; then
    # 58 means there were no changes. just make sure sig is running
    systemctl start sig
    cd /home/sig/sig/metrics
    docker-compose up -d
elif [[ $code == 0 ]]; then
    # 0 means there was a change and rebuild, so restart sig
    systemctl stop sig
    rm -rf /home/sig/sig/validator  # needed until we have a resumable accountsdb
    systemctl start sig
    cd /home/sig/sig/metrics
    docker-compose down
    docker-compose pull
    docker-compose up -d
else
    # other codes indicate error and should be propagated
    exit $code
fi
